@model TouchpointMedical.Site.Models.Home.LogViewModel
@{
    ViewData["Title"] = "View Log";
}
<h2>@Model.FileName</h2>
<div>
    <div><strong>Last write:</strong> @Model.LastWrite.ToString("yyyy-MM-dd HH:mm:ss")</div>
    <div><strong>Size:</strong> @string.Format("{0:N0} bytes", Model.SizeBytes)</div>
</div>

<a class="button" asp-action="Logs">Back to Logs</a>
<form method="get" asp-action="ViewLog" class="controls">
    <input type="hidden" name="file" value="@Model.FileName" />
    <input type="hidden" name="dir" value="@Context.Request.Query["dir"]" />
    <label>Show last</label>
    <input type="number" name="tail" min="10" max="5000" value="@Model.Tail" />
    <span>lines</span>
    <button type="submit">Refresh</button>
    <a class="button" asp-action="ViewLog" asp-route-file="@Model.FileName" asp-route-dir="@Context.Request.Query["dir"]" asp-route-download="true">Download</a>
</form>

<h2>Most recent entries on top</h2>
<pre id="log" style="background:#0b0b0b;color:#d0d0d0;padding:1rem; border-radius:6px; overflow:auto; max-height:70vh; font-size:12px;">
@foreach (var line in Model.Lines)
{
@:@JsonConvert.SerializeObject( JsonConvert.DeserializeObject(line), Formatting.Indented)
}
</pre>

<label style="display:flex; gap:.5rem; align-items:center; margin-top:.5rem;">
    <input type="checkbox" id="pretty" />
    Pretty-print JSON lines (best effort)
</label>

<script>
    const pre = document.getElementById('log');
    const pretty = document.getElementById('pretty');
    pretty.addEventListener('change', () => {
      const lines = pre.textContent.split('\n');
      if (pretty.checked) {
        pre.textContent = lines.map(l => {
          try { return JSON.stringify(JSON.parse(l), null, 2); } catch { return l; }
        }).join('\n');
      } else {
        location.reload(); // simplest way to restore raw
      }
    });
</script>

<style>
    .controls {
        display: flex;
        gap: .5rem;
        align-items: center;
        margin: .75rem 0;
    }

        .button, .controls button {
            background: #0d6efd;
            color: #fff;
            padding: .4rem .7rem;
            border: none;
            border-radius: 4px;
            text-decoration: none;
        }

            .button:hover {
                filter: brightness(0.95);
            }
</style>